01 - Método confirmarExclusao() não será utilizado em Conta e Transferencia.
02 - Métodos consultarLancamentos(), ConsultarSaldo(), faturaCartaoCredito() não serão utilizados.
03 - O Método listAll() foi adicionado tanto em ContasDAO, BancoDAO e TransferenciaDAO para buscar todos os registros.
04 - Em TransferenciasController e ContasController foi adicionado um método listar para mandar os registros para as views.
05 - O atributo nomePessoa na classe Pessoa foi trocado de int para String.
06 - Em uma transferência ao atributo contaCorrente na classe Lancamento é considerado como conta origem.
07 - Toda transferência é considerada como tipo de lançamento igual a "Saída"
08 - Foi utilizado um usuário padrão com id = 1
09 - PessoaDAO só implementa o método buscarPessoaPeloId().
10 - Banco já é pré cadastrado no banco de dados e ele só implementa dois métodos: listAll() e buscarBancoPeloId();
11 - TipoLancamentoDAO é pré cadastrado no banco de dados. Só implementa o método buscarTipoLancamentoPeloId();
12 - TransferenciasController e ContasController está utilizando o framework Spring MVC.
13 - Símbolo 'R$' não foi implementado no campo 'valor' na tela de transferência pois o plugin jQuery utilizado não suporta símbolos.
14 - Máscara de número agência e número conta não implementada pois diferentes bancos possuem quantidade de dígitos para 'conta' e 'agência' diferentes. Implementada limitação de cadastro/edição somente para números.
15 - Na confirmação da exclusão de um registro, as opções 'Ok' e 'Cancelar' aparecem devido ao padrão do confirm() do javascript.
16 - Na exclusão de uma conta, caso a mesma esteja associada a uma transferência, não será possível excluí-la. A própria modelagem não indica que precisava fazer a exclusão ou não da conta nesse caso, sendo isso informado ao usuário para excluir os lançamentos associados primeiro.
